# CodeQL Advanced - C# Only workflow
name: "CodeQL Advanced"

on:
  # Run on pushes to main, PRs targeting main, and weekly at 09:25 UTC every Tuesday
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '25 9 * * 2'  # At 09:25 UTC every Tuesday

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-24.04  # Ubuntu runner with .NET SDK
    permissions:
      security-events: write     # Allow uploading CodeQL results
      packages: read            # To fetch CodeQL packs
      actions: read             # Required for private repos
      contents: write           # Allow checkout actions

    strategy:
      fail-fast: false          # Continue analysis on all languages even if one fails
      matrix:
        include:
          - language: csharp    # Only C# for this matrix
            build-mode: none    # Let CodeQL build automatically

    steps:
      # 1. Check out the code under analysis
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. (Optional) Enforce consistent C# formatting using Csharpier
      - name: Format C# code with Csharpier
        if: matrix.language == 'csharp'
        run: |
          dotnet tool install -g csharpier --version 1.0.1
          export PATH="$PATH:~/.dotnet/tools"
          csharpier format .

      # 3. Commit & push formatting changes back on PRs
      - name: Commit and push formatted code
        if: github.event_name == 'pull_request' && matrix.language == 'csharp'
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add .
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "Apply code formatting with Csharpier"
            git pull --rebase origin ${{ github.head_ref }}
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No formatting changes to commit."
          fi

      # 4. Initialize CodeQL analysis for C#
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}  # csharp
          build-mode: ${{ matrix.build-mode }}  # none (auto-detect)

      # 5. (Manual build hook) If build-mode is manual, instruct user to add build commands
      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'Manual build mode enabled. Add your build commands here.'
          exit 1

      # 6. Run the actual CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "language:${{ matrix.language }}"  # Tag findings by language
